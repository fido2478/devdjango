install django, gunicorn, nignx on ubuntu 16.04

#### setting ####
$ sudo apt-get install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx
$ sudo apt-get install python3-django
$ sudo pip3 install gunicorn python3-psycopg2

$ django-admin --version
> 1.9.6

#### django setting ####
$ django-admin startproject devdjango
$ python3 manage.py migrate
$ python3 manage.py createsuperuser
Username: devdjango
Passwrd: 

$ vi devdjango/settings.py
- add your IP to the ALLOWED_HOSTS variable:
- add database configuration:
- add static root to the end of the settings:
--------------------------------------
ALLOWED_HOSTS = ['*']

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'devdjango',
        'USER': 'devdjango',
        'PASSWORD': 'xxxx',
        'HOST': 'localhost',
    }
}

STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
--------------------------------------

$ python3 manage.py makemigrations blog

#### create app ####
$ python3 manage.py startapp blog

- add app to settings.py
$ devdjango/settings.py
--------------------------------------
INSTALLED_APPS = [
    ...
    'blog',
]
--------------------------------------

$ blog/models.py
--------------------------------------
from django.db import models

class Post(models.Model):
    message = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
--------------------------------------

$ blog/admin.py
--------------------------------------
from django.contrib import admin
from .models import Post

admin.site.register(Post)
--------------------------------------

$ python3 manage.py makemigrations blog


#### postgres setting ####

$ sudo -u postgres psql
- paste this code in postgres console:
--------------------------------------
CREATE DATABASE devdjango;
CREATE USER devdjango WITH PASSWORD 'xxxx';
ALTER ROLE devdjango SET client_encoding TO 'utf8';
ALTER ROLE devdjango SET default_transaction_isolation TO 'read committed';
ALTER ROLE usernadevdjangome SET timezone TO 'UTC';
GRANT ALL PRIVILEGES ON DATABASE devdjango TO devdjango;
\q
--------------------------------------

$ cd ~/devdjango
$ python3 manage.py makemigrations
$ python3 manage.py migrate
$ python3 manage.py createsuperuser
$ python3 manage.py collectstatic

$ sudo ufw allow 8001
$ python3 manage.py runserver 0.0.0.0:8001
ctrl + c


#### gunicorn setting ####

$ gunicorn --bind 0.0.0.0:8001 devdjango.wsgi:application
ctrl + c

$ sudo vi /etc/systemd/system/gunicorn.service
- paste inside gunicorn.service:
--------------------------------------
[Unit]
Description=gunicorn daemon
After=network.target

[Service]
User=www-data
Group=www-data
WorkingDirectory=/var/www/devdjango
ExecStart=/usr/local/bin/gunicorn --bind 192.168.0.11:8001 devdjango.wsgi:application

[Install]
WantedBy=multi-user.target
--------------------------------------

$ sudo systemctl start gunicorn
$ sudo systemctl enable gunicorn

- when you change gunicorn.service, you run
$ sudo systemctl daemon-reload
$ sudo systemctl restart gunicorn


#### nginx setting ####

$ sudo nano /etc/nginx/sites-available/devdjango
- copy inside:
--------------------------------------
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /var/www/devdjango;
    }
    location / {
        include proxy_params;
        proxy_pass http://192.168.0.11:8001;
    }
}
--------------------------------------

- remove or rename default
$ mv /etc/nginx/sites-available/default /etc/nginx/sites-available/default.df

$ sudo ln -s /etc/nginx/sites-available/devdjango /etc/nginx/sites-enabled
$ sudo nginx -t
$ sudo systemctl restart nginx
$ sudo ufw delete allow 8000
$ sudo ufw allow 'Nginx Full'
